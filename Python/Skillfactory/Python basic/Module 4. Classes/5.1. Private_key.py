'''
При разработке облачного пространства для командной работы над проектами вам поручили реализовать класс User и объявить в нём два метода:

set_private_key(), который принимает аргумент-строку (приватный ключ) и создаёт локальное свойство private_key со значением переданного аргумента;
show_private_key(), который выводит на экран строку:
Приватный ключ пользователя <значение_параметра>.
Пример использования класса:

user1 = User()
user1.set_private_key('uox00b_12x')
user1.show_private_key()

# Приватный ключ пользователя: uox00b_12x
Обратите внимание, что создавать экземпляры класса не нужно, необходимо только реализовать класс.
После того как вы протестируете работу класса на приведённых примерах и перед тем как отправить код на проверку,
не забудьте удалить всё, кроме объявления класса.
'''
# Введите свое решение ниже
# Определение класса User
class User:
    # Метод для установки приватного ключа пользователя
    def set_private_key(self, string):
        # Присваиваем переданную строку атрибуту private_key объекта
        self.private_key = string

    # Метод для отображения приватного ключа пользователя
    def show_private_key(self):
        # Выводим сообщение с приватным ключом пользователя
        print('Приватный ключ пользователя', self.private_key)

# Создание экземпляра класса User с именем user1
user1 = User()

# Установка приватного ключа для user1
user1.set_private_key('uox00b_12x')

# Отображение приватного ключа для user1
user1.show_private_key()

# Приватный ключ пользователя: uox00b_12x
